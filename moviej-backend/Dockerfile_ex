# 멀티 스테이지 빌드 사용
FROM eclipse-temurin:17-jdk as builder

WORKDIR /app

# Gradle Wrapper와 build 파일들 먼저 복사
COPY gradlew .
COPY gradle gradle
COPY build.gradle .
COPY settings.gradle .

# 의존성 다운로드 (캐시 활용)
RUN ./gradlew dependencies --no-daemon

# 소스 코드 복사
COPY src src

# 애플리케이션 빌드
RUN ./gradlew build --no-daemon -x test

# 실행 단계
FROM eclipse-temurin:17-jre

WORKDIR /app

# curl과 netcat 설치 (healthcheck 및 네트워크 테스트용)
RUN apt-get update && apt-get install -y curl netcat-traditional && rm -rf /var/lib/apt/lists/*

# 빌드된 JAR 파일 복사
COPY --from=builder /app/build/libs/*.jar app.jar

# 시작 스크립트 생성 (DB 대기 + 애플리케이션 실행)
RUN echo '#!/bin/bash\n\
echo "Waiting for MySQL to be ready..."\n\
while ! nc -z db 3306; do\n\
  echo "MySQL is not ready yet, waiting..."\n\
  sleep 2\n\
done\n\
echo "MySQL is ready! Starting Spring Boot..."\n\
exec java -Xmx512m -Xms256m -jar app.jar' > /app/start.sh && \
chmod +x /app/start.sh

# 애플리케이션 실행
CMD ["/app/start.sh"]
